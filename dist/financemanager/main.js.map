{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/categories.service.ts","webpack:///./src/app/categories/categories.component.css","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/category.ts","webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/dbd-report/dbd-report.component.css","webpack:///./src/app/dbd-report/dbd-report.component.html","webpack:///./src/app/dbd-report/dbd-report.component.ts","webpack:///./src/app/report.ts","webpack:///./src/app/report/report.component.css","webpack:///./src/app/report/report.component.html","webpack:///./src/app/report/report.component.ts","webpack:///./src/app/transaction.ts","webpack:///./src/app/transaction/transaction.component.css","webpack:///./src/app/transaction/transaction.component.html","webpack:///./src/app/transaction/transaction.component.ts","webpack:///./src/app/transactions.service.ts","webpack:///./src/app/transactions/transactions.component.css","webpack:///./src/app/transactions/transactions.component.html","webpack:///./src/app/transactions/transactions.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { CategoryComponent } from './category/category.component';\nimport { TransactionComponent } from './transaction/transaction.component';\nimport { ReportComponent } from './report/report.component';\nimport { DbdReportComponent } from './dbd-report/dbd-report.component';\nimport { AuthComponent } from './auth/auth.component';\n\nimport { AuthGuardService } from './auth-guard.service';\n\nconst routes: Routes = [\n\t{path: '', canActivate: [AuthGuardService], redirectTo: '/categories', pathMatch: 'full' },\n\t{path: 'auth', component: AuthComponent},\n\t{path: 'categories', component: CategoriesComponent, canActivate: [AuthGuardService] },\n\t{path: 'transactions', component: TransactionsComponent, canActivate: [AuthGuardService] },\n\t{path: 'category/:action', component: CategoryComponent, canActivate: [AuthGuardService] },\n\t{path: 'category/:action/:id', component: CategoryComponent, canActivate: [AuthGuardService] },\n\t{path: 'transaction/:action', component: TransactionComponent, canActivate: [AuthGuardService] },\n\t{path: 'transaction/:action/:id', component: TransactionComponent, canActivate: [AuthGuardService] },\n\t{path: 'report', component: ReportComponent, canActivate: [AuthGuardService] },\n\t{path: 'dbdreport', component: DbdReportComponent, canActivate: [AuthGuardService] }\n];\n@NgModule({\n\timports: [ RouterModule.forRoot(routes) ],\n\texports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">FinanceManager</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/categories\\\">Categories</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/transactions\\\">Transactions</a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" routerLinkActive=\\\"active\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Actions\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/category/add\\\">Add category</a>\\n            <a class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/transaction/add\\\">Add transaction</a>\\n          </div>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" routerLinkActive=\\\"active\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Reports\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/report\\\">Expense/Revenue report</a>\\n            <a class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/dbdreport\\\">Day-by-day report</a>\\n          </div>\\n        </li>\\n      </ul>\\n      <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.isLogged\\\">\\n        <a class=\\\"nav-link\\\" >Log In</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.isLogged\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/auth\\\" (click)=\\\"logOut()\\\">Log Out</a>\\n      </li>\\n    </ul>\\n    </div>\\n  </nav>\\n  <div class=\\\"col-sm-12\\\">\\n  <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\nimport { AuthService } from './auth.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [AuthService]\n})\nexport class AppComponent {\n  title = 'Finance Manager';\n\n  constructor(public authService: AuthService){}\n\n  ngOnInit() {\n  }\n\n  logOut (): void{\n  \tthis.authService.logOut();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { CategoryComponent } from './category/category.component';\nimport { TransactionComponent } from './transaction/transaction.component';\nimport { ReportComponent } from './report/report.component';\nimport { DbdReportComponent } from './dbd-report/dbd-report.component';\nimport { AuthComponent } from './auth/auth.component';\n\nimport { ToastrModule, ToastNoAnimation, ToastNoAnimationModule } from 'ngx-toastr';\nimport { ChartModule } from 'angular-highcharts';\nimport { StorageServiceModule } from \"ngx-webstorage-service\";\n\nimport { AuthService } from './auth.service';\nimport { AuthGuardService } from './auth-guard.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoriesComponent,\n    TransactionsComponent,\n    CategoryComponent,\n    TransactionComponent,\n    ReportComponent,\n    DbdReportComponent,\n    AuthComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ToastNoAnimationModule,\n    ToastrModule.forRoot({\n      toastComponent: ToastNoAnimation,\n    }),\n    ChartModule,\n    StorageServiceModule\n  ],\n  providers: [\n    AuthService,\n    AuthGuardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {}\n  \n  canActivate(): boolean {\n    if (!this.authService.getToken())\n    {\n      this.router.navigate(['/auth']);\n    }\n    return (this.authService.getToken() !== undefined);\n  }\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authUrl = '/api/login';\n  public isLogged = false;\n\n  constructor(\n  \tprivate http: HttpClient,\n  \t@Inject(SESSION_STORAGE) private storage: StorageService) {\n  \t  if(this.storage.get('auth-token') !== undefined)\n  \t\tthis.isLogged = true;\n  }\n\n  logIn (login: string, pass: string): Observable<Object>{\n  \treturn this.http.post<Object>(this.authUrl, {'name': login, 'password': pass});\n  }\n\n  setToken(token: string): void{\n  \tthis.storage.set('auth-token', token);\n  \tthis.isLogged = true;\n  }\n\n  getToken(): string{\n    return this.storage.get('auth-token');\n  }\n\n  logOut(): void{\n  \tthis.storage.remove('auth-token');\n  \tthis.isLogged = false;\n  }\n}\n","module.exports = \".center-block\\r\\n{\\r\\n\\twidth: 50%;\\r\\n\\tmargin: auto;\\r\\n\\tbackground-color: #F8F9FA;\\r\\n\\tborder-radius: 3px;\\r\\n\\tborder: 1px solid #CED4DA;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"authService.isLogged\\\" class=\\\"alert alert-success\\\">You are logged in system. Go to <a routerLink=\\\"/categories\\\">categories</a></div>\\n<div *ngIf=\\\"!authService.isLogged\\\" class=\\\"center-block mt-2 p-2\\\">\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label>Login: </label>\\n\\t\\t<input [(ngModel)]=\\\"login\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"login\\\">\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label>Password: </label>\\n\\t\\t<input [(ngModel)]=\\\"pass\\\" class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"login\\\">\\n\\t</div>\\n\\t<button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"submit()\\\">Log in</button>\\n</div>\"","import { Output, EventEmitter, Inject, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  login: string;\n  pass: string;\n  constructor(\n  \t@Inject(SESSION_STORAGE) private storage: StorageService,\n  \tprivate authService: AuthService,\n  \tprivate router: Router,\n  \tprivate toastr: ToastrService ) { }\n\n  ngOnInit() {\n  }\n\n  submit (): void{\n  \tthis.authService.logIn(this.login, this.pass)\n  \t    .subscribe((result: {auth:string, token:string}) => {\n  \t    \tif(result.auth){\n  \t    \t\tthis.authService.setToken(result.token);\n  \t    \t\tthis.toastr.success(\"You are logged succesfully\", \"Success\");\n  \t    \t\tthis.router.navigateByUrl('/categories');\n  \t    \t}else{\n  \t    \t\tthis.toastr.error(\"Password or login is not correct\", \"Error\");\n  \t    \t}\n  \t    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Category } from './category';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  private categoriesUrl = '/api/categories';\n  private headers;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService) {\n    this.headers = new HttpHeaders({'x-access-token': this.authService.getToken()});\n  }\n\n  getCategories (): Observable<Category[]> {\n  \treturn this.http.get<Category[]>(this.categoriesUrl, {headers: this.headers});\n  }\n\n  getCategory (id:string): Observable<Category> {\n  \treturn this.http.get<Category>(this.categoriesUrl+'/'+id, {headers: this.headers});\n  }\n\n  putCategory (category: Category): Observable<Category> {\n  \treturn this.http.put<Category>(this.categoriesUrl+'/'+category._id, category, {headers: this.headers});\n  }\n\n  addCategory (category: Category): Observable<Category> {\n    return this.http.post<Category>(this.categoriesUrl, category, {headers: this.headers});\n  }\n\n  removeCategory (categoryId: String) {\n    return this.http.delete(this.categoriesUrl+'/'+categoryId, {headers: this.headers});\n  }\n}\n","module.exports = \"\"","module.exports = \"<table *ngIf=\\\"categories !== undefined && categories.length\\\" class=\\\"table table-bordered table-hover m-2 table-auto-layout\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">Description</th>\\n      <th scope=\\\"col\\\">Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let category of categories; let i = index\\\">\\n      <th scope=\\\"row\\\">{{i+1}}</th>\\n      <td>{{category.name}}</td>\\n      <td>{{category.description}}</td>\\n      <td class=\\\"text-center\\\"><button routerLink=\\\"/category/view/{{category._id}}\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-primary mr-2\\\">Edit</button><button (click)=\\\"removeCategory(category._id)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button></td>\\n    </tr>\\n  </tbody>\\n</table>\\n<div *ngIf=\\\"!categories.length\\\" class=\\\"m-2 alert alert-warning\\\">There aren't any categories, be free to add some :)</div>\\n<button class=\\\"m-2 btn btn-primary\\\" routerLink=\\\"/category/add\\\">Add category</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Category } from '../category';\n\nimport { CategoriesService } from '../categories.service';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\tcategories: Category[] = [];\n  constructor(\n    private categoriesService: CategoriesService,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n  \tthis.getCategories();\n  }\n\n  getCategories(): void{\n  \tthis.categoriesService.getCategories()\n  \t    .subscribe(categories => this.categories = categories);\n  }\n\n  removeCategory(categoryId: string): void{\n    this.categoriesService.removeCategory(categoryId)\n        .subscribe( () => {\n          this.toastr.success(\"Category was removed succesfully\", \"Success\");\n          this.getCategories();\n          });\n  }\n\n}\n","export class Category {\r\n\t_id: string;\r\n\tname: string;\r\n\tdescription: string;\r\n};","module.exports = \"\"","module.exports = \"<div class=\\\"form-group\\\">\\n\\t<label>Name: </label>\\n\\t<input class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"category.name\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<label>Description: </label>\\n\\t<textarea class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"category.description\\\"></textarea>\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<button class=\\\"btn btn-primary\\\" (click)=\\\"submit(category)\\\">Save</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Category } from '../category';\n\nimport { CategoriesService } from '../categories.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  action: string;\n  category: Category = new Category();\n  constructor(\n  \tprivate route: ActivatedRoute,\n  \tprivate location: Location,\n  \tprivate categoriesService: CategoriesService,\n  \tprivate toastr: ToastrService ) { }\n\n  ngOnInit() {\n  \tthis.parseAction();\n  }\n\n  parseAction (): void{\n  \tthis.action = this.route.snapshot.paramMap.get('action');\n  \tif(this.action == 'view')return this.getCategory();\n  }\n\n  getCategory (): void{\n  \tconst id = this.route.snapshot.paramMap.get('id');\n  \tthis.categoriesService.getCategory(id)\n  \t    .subscribe(category => this.category = category);\n  }\n\n  submit (category: Category): void{\n  \tif(category.name.length == 0){\n  \t\tthis.toastr.error('Category name can not be empty', 'Something goes wrong!');\n  \t\treturn;\n  \t}\n    if(this.action == 'add')\n    {\n      this.categoriesService.addCategory(category)\n        .subscribe(category => this.toastr.success('Category created successfully', 'Success!'));\n      this.category = new Category();\n    }\n\n  \tif(this.action == 'view')\n      this.categoriesService.putCategory(category)\n  \t    .subscribe(category => this.toastr.success('Category saved successfully', 'Success!'));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"!isChartReady\\\">\\n<div class=\\\"form-group\\\">\\n    <label>Date from YYYY.MM.DD:</label>\\n\\t<input class=\\\"form-control\\\" type=\\\"date\\\" name=\\\"date_created_from\\\" [(ngModel)]=\\\"report.date_created_from\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n    <label>Date till YYYY.MM.DD:</label>\\n\\t<input class=\\\"form-control\\\" type=\\\"date\\\" name=\\\"date_created_till\\\" [(ngModel)]=\\\"report.date_created_till\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n    <label>Operation type:</label>\\n\\t<select class=\\\"form-control\\\" name=\\\"type\\\" [(ngModel)]=\\\"report.type\\\">\\n\\t\\t<option value=\\\"expense\\\">Expense</option>\\n\\t\\t<option value=\\\"revenue\\\">Revenue</option>\\n\\t</select>\\n</div>\\n<div class=\\\"form-group\\\">\\n    <label>Category:</label>\\n\\t<select class=\\\"form-control\\\" name=\\\"type\\\" [(ngModel)]=\\\"report.category\\\">\\n\\t\\t<option *ngFor=\\\"let category of categories\\\" value=\\\"{{category._id}}\\\">{{category.name}}</option>\\n\\t</select>\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<button class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">Create report</button>\\n</div>\\n</div>\\n<div *ngIf=\\\"isChartReady\\\">\\n\\t<div *ngIf=\\\"transactions.length == 0\\\" class=\\\"m-2 alert alert-warning\\\">\\n\\t\\tThere aren't any transactions in this report. \\n\\t\\t<button class=\\\"btn btn-primary\\\" (click)=\\\"regenerateReport()\\\">Regenerate report</button>\\n\\t</div>\\n\\t<div *ngIf=\\\"transactions.length != 0\\\"style=\\\"height: 400px;\\\">\\n\\t\\t<div [chart]=\\\"chart\\\"></div>\\n\\t</div>\\n\\t<button class=\\\"btn btn-primary\\\" (click)=\\\"regenerateReport()\\\">Regenerate report</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'angular-highcharts';\n\nimport { Category } from '../category';\nimport { Transaction } from '../transaction';\nimport { Report } from '../report';\n\nimport { CategoriesService } from '../categories.service';\nimport { TransactionsService } from '../transactions.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dbd-report',\n  templateUrl: './dbd-report.component.html',\n  styleUrls: ['./dbd-report.component.css']\n})\nexport class DbdReportComponent implements OnInit {\n  isChartReady: boolean = false;\n  report: Report = new Report();\n  reportCategoriesData = [];\n  categories: Category[];\n  transactions: Transaction[];\n\n  chart: Chart;\n\n  constructor(\n  \tprivate categoriesService: CategoriesService,\n  \tprivate transactionsService: TransactionsService,\n  \tprivate toastr: ToastrService) { }\n\n  ngOnInit() {\n  \tthis.getCategories();\n  }\n\n  getCategories (): void{\n  \tthis.categoriesService.getCategories()\n  \t    .subscribe(categories => this.categories = categories);\n  }\n\n  getTransactions (report: Report): void{\n  \tthis.transactionsService.getTransactions(report)\n  \t    .subscribe(transactions => {\n  \t    \tthis.transactions = transactions\n  \t    \tthis.generateReport();\n  \t    });\n  }\n\n  generateReport (): void{\n  \tlet reportData = {};\n  \tlet reportCategoriesData = [];\n  \tthis.transactions.forEach(transaction => {\n  \t\tif(reportData[transaction.date_created.toString()] === undefined)\n  \t\t\treportData[transaction.date_created.toString()] = {\n  \t\t\t\t'date': transaction.date_created,\n  \t\t\t\t'y': transaction.total\n  \t\t\t};\n  \t\telse\n  \t\t\treportData[transaction.date_created.toString()].y += transaction.total;\n  \t});\n  \tfor(let key in reportData){\n  \t\tlet date = new Date(reportData[key].date);\n  \t\tthis.reportCategoriesData.push([\n  \t\t\tDate.UTC(date.getFullYear(),\n  \t\t\t         date.getUTCMonth() + 1,\n  \t\t\t         date.getUTCDate()),\n  \t\t\treportData[key]['y']]);\n  \t}\n\n  \tthis.chart = new Chart({\n      title: {\n        text: 'Chart of '+this.report.type+' for period'\n      },\n      xAxis: {\n        type: 'datetime',\n        dateTimeLabelFormats: {\n            month: '%e. %b',\n            year: '%b'\n        },\n        title: {\n            text: 'Date'\n        }\n      },\n      series: [{\n      \tname: this.getCategoryName(this.report.category),\n      \tdata: this.reportCategoriesData\n      }]\n    });\n    this.isChartReady = true;\n  \tthis.toastr.success(\"Report generated\", \"Success\");\n  }\n\n  getCategoryName (categoryId: string): string{\n  \tlet category = this.categories.find(category => category._id == categoryId);\n  \tif(category == null)return \"undefined\";\n  \telse return category.name;\n  }\n\n  submit (): void{\n  \tif(this.report.date_created_from > this.report.date_created_till){\n  \t\tthis.toastr.error(\"'Date from' can not be more then 'date till'\", \"Something wrong\");\n  \t\treturn;\n  \t}\n  \tif(this.report.category == null){\n  \t\tthis.toastr.error(\"Category can not be empty\", \"Something wrong\");\n  \t\treturn;\n  \t}\n  \tthis.getTransactions(this.report);\n  }\n\n  regenerateReport (): void{\n  \tthis.report = new Report();\n  \tthis.reportCategoriesData = [];\n  \tthis.isChartReady = false;\n  \tthis.transactions = [];\n  }\n\n}\n","export class Report {\n  date_created_from: Date;\n  date_created_till: Date;\n  type: string = \"expense\";\n  category: string;\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"!isChartReady\\\">\\n<div class=\\\"form-group\\\">\\n    <label>Date from YYYY.MM.DD:</label>\\n\\t<input class=\\\"form-control\\\" type=\\\"date\\\" name=\\\"date_created_from\\\" [(ngModel)]=\\\"report.date_created_from\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n    <label>Date till YYYY.MM.DD:</label>\\n\\t<input class=\\\"form-control\\\" type=\\\"date\\\" name=\\\"date_created_till\\\" [(ngModel)]=\\\"report.date_created_till\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n    <label>Operation type:</label>\\n\\t<select class=\\\"form-control\\\" name=\\\"type\\\" [(ngModel)]=\\\"report.type\\\">\\n\\t\\t<option ng-selected=\\\"!isChartReady\\\" value=\\\"expense\\\">Expense</option>\\n\\t\\t<option value=\\\"revenue\\\">Revenue</option>\\n\\t</select>\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<button class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">Create report</button>\\n</div>\\n</div>\\n<div *ngIf=\\\"isChartReady\\\">\\n\\t<div *ngIf=\\\"transactions.length == 0\\\" class=\\\"m-2 alert alert-warning\\\">\\n\\t\\tThere aren't any transactions in this report. \\n\\t\\t<button class=\\\"btn btn-primary\\\" (click)=\\\"regenerateReport()\\\">Regenerate report</button>\\n\\t</div>\\n\\t<div *ngIf=\\\"transactions.length != 0\\\" class=\\\"row\\\" style=\\\"height: 400px;\\\">\\n\\t\\t<div class=\\\"col-4 p-2\\\">\\n\\t\\t\\t<table class=\\\"table\\\">\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>Category</th>\\n\\t\\t\\t\\t\\t<th>Percent</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr *ngFor=\\\" let category of reportCategoriesData \\\">\\n\\t\\t\\t\\t\\t<td>{{category.name}}</td>\\n\\t\\t\\t\\t\\t<td>{{category.y | number: '1.2-2'}}%</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td colspan=\\\"2\\\" class=\\\"text-right\\\">\\n\\t\\t\\t\\t\\t\\tTotal: {{reportTotalSum}}\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td colspan=\\\"2\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"regenerateReport()\\\">Regenerate report</button>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-8\\\" [chart]=\\\"chart\\\"></div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'angular-highcharts';\n\nimport { Category } from '../category';\nimport { Transaction } from '../transaction';\nimport { Report } from '../report';\n\nimport { CategoriesService } from '../categories.service';\nimport { TransactionsService } from '../transactions.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n  isChartReady: boolean = false;\n  report: Report = new Report();\n  reportCategoriesData = [];\n  reportTotalSum: number = 0;\n  categories: Category[];\n  transactions: Transaction[];\n\n  chart = new Chart({\n      chart: {\n        type: 'line'\n      },\n      title: {\n        text: 'Linechart'\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        name: 'Line 1',\n        data: [1, 2, 3]\n      }]\n  });\n\n  constructor(\n  \tprivate categoriesService: CategoriesService,\n  \tprivate transactionsService: TransactionsService,\n  \tprivate toastr: ToastrService) { }\n\n  ngOnInit() {\n  \tthis.getCategories();\n  }\n\n  getCategories (): void{\n  \tthis.categoriesService.getCategories()\n  \t    .subscribe(categories => this.categories = categories);\n  }\n\n  getTransactions (report: Report): void{\n  \tthis.transactionsService.getTransactions(report)\n  \t    .subscribe(transactions => {\n  \t    \tthis.transactions = transactions\n  \t    \tthis.generateReport();\n  \t    });\n  }\n\n  generateReport (): void{\n  \tlet reportData = {};\n  \tlet sum = 0;\n  \tthis.transactions.forEach(transaction => {\n  \t\tthis.reportTotalSum += transaction.total;\n  \t\tif(reportData[transaction.category] === undefined)\n  \t\t\treportData[transaction.category] = {\n  \t\t\t\t'name': this.getCategoryName(transaction.category),\n  \t\t\t\t'y': transaction.total\n  \t\t\t};\n  \t\telse\n  \t\t\treportData[transaction.category].y += transaction.total;\n  \t});\n  \tfor(let key in reportData){\n  \t\treportData[key].y = (reportData[key].y/this.reportTotalSum)*100;\n  \t\tthis.reportCategoriesData.push(reportData[key]);\n  \t}\n  \tthis.chart = new Chart({\n      chart: {\n        type: 'pie'\n      },\n      title: {\n        text: 'Chart of '+this.report.type+' by categories till period'\n      },\n      tooltip: {\n        pointFormat: '{point.name}: <b>{point.percentage:.2f}%</b>'\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n      \tname: 'Categories',\n      \tdata: this.reportCategoriesData\n      }]\n    });\n    this.isChartReady = true;\n  \tthis.toastr.success(\"Report generated\", \"Success\");\n  }\n\n  getCategoryName (categoryId: string): string{\n  \tlet category = this.categories.find(category => category._id == categoryId);\n  \tif(category == null)return \"undefined\";\n  \telse return category.name;\n  }\n\n  submit (): void{\n  \tif(this.report.date_created_from > this.report.date_created_till){\n  \t\tthis.toastr.error(\"'Date from' can not be more then 'date till'\", \"Something wrong\");\n  \t\treturn;\n  \t}\n  \tthis.getTransactions(this.report);\n  }\n\n  regenerateReport (): void{\n  \tthis.report = new Report();\n  \tthis.reportCategoriesData = [];\n  \tthis.reportTotalSum = 0;\n  \tthis.isChartReady = false;\n  \tthis.transactions = [];\n  }\n\n}\n","export class Transaction {\r\n\t_id: string;\r\n\tcategory: string;\r\n\ttype: string;\r\n\ttotal: number;\r\n\tdescription: string;\r\n\tdate_created: Date;\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"form-group\\\">\\n\\t<label>Category: </label>\\n\\t<select class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"transaction.category\\\">\\n\\t\\t<option *ngFor=\\\" let category of categories \\\" value=\\\"{{category._id}}\\\">{{category.name}}</option>\\n\\t</select>\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<label>Type: </label>\\n\\t<select class=\\\"form-control\\\" name=\\\"type\\\" [(ngModel)]=\\\"transaction.type\\\">\\n\\t\\t<option value=\\\"expense\\\">Expense</option>\\n\\t\\t<option value=\\\"revenue\\\">Revenue</option>\\n\\t</select>\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<label>Total: </label>\\n\\t<input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"transaction.total\\\" name=\\\"total\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<label>Description: </label>\\n\\t<textarea class=\\\"form-control\\\" [(ngModel)]=\\\"transaction.description\\\" name=\\\"total\\\"></textarea>\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<label>Date DD.MM.YYYY: </label>\\n\\t<input class=\\\"form-control\\\" type=\\\"date\\\" [ngModel]=\\\"transaction.date_created | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"transaction.date_created=$event\\\" name=\\\"date_created\\\">\\n</div>\\n<div class=\\\"form-group\\\">\\n\\t<button class=\\\"btn btn-primary\\\" (click)=\\\"submit(transaction)\\\">Save</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Category } from '../category';\nimport { Transaction } from '../transaction';\n\nimport { CategoriesService } from '../categories.service';\nimport { TransactionsService } from '../transactions.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n  action: string;\n  categories: Category[];\n  transaction: Transaction = new Transaction();\n  constructor(\n  \tprivate categoriesService: CategoriesService,\n  \tprivate transactionsService: TransactionsService,\n  \tprivate toastr: ToastrService,\n  \tprivate route: ActivatedRoute,\n  \tprivate location: Location) { }\n\n  ngOnInit() {\n  \tthis.parseAction();\n  \tthis.getCategories();\n  }\n\n  parseAction (): void{\n  \tthis.action = this.route.snapshot.paramMap.get('action');\n  \tif(this.action == 'view')return this.getTransaction();\n  }\n\n  getCategories (): void{\n  \tthis.categoriesService.getCategories()\n  \t    .subscribe(categories => this.categories = categories);\n  }\n\n  getTransaction (): void{\n  \tconst id = this.route.snapshot.paramMap.get('id');\n  \tthis.transactionsService.getTransaction(id)\n  \t    .subscribe(transaction => this.transaction = transaction);\n  }\n\n  submit (transaction: Transaction): void{\n  \tif(transaction.category.length == 0){\n  \t\tthis.toastr.error('Category is wrong', 'Something goes wrong!');\n  \t\treturn;\n  \t}\n  \tif(transaction.total <= 0){\n  \t\tthis.toastr.error('Total can not be zero or less', 'Something goes wrong!');\n  \t\treturn;  \t\t\n  \t}\n    if(this.action == 'add')\n    {\n      if(!transaction.date_created)transaction.date_created = new Date();\n      \n      this.transactionsService.addTransaction(transaction)\n        .subscribe(transaction => this.toastr.success('Transaction created successfully', 'Success!'));\n      this.transaction = new Transaction();\n    }\n\n  \tif(this.action == 'view')\n      this.transactionsService.putTransaction(transaction)\n  \t    .subscribe(transaction => this.toastr.success('Transaction saved successfully', 'Success!'));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Transaction } from './transaction';\n\nimport { AuthService } from './auth.service';\n\nconst httpObjects = {\n\theaders: new HttpHeaders({'Content-type': 'application/jsonp'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionsService {\n  private transactionsUrl = '/api/transactions';\n  private headers;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService) {\n    this.headers = new HttpHeaders({'x-access-token': this.authService.getToken()});\n  }\n\n  getTransactions(params?: {}): Observable<Transaction[]> {\n  \treturn this.http.get<Transaction[]>(this.transactionsUrl, {params: params, headers: this.headers});\n  }\n  \n  getTransaction (id:string): Observable<Transaction> {\n  \treturn this.http.get<Transaction>(this.transactionsUrl+'/'+id, {headers: this.headers});\n  }\n\n  putTransaction (transaction: Transaction): Observable<Transaction> {\n  \treturn this.http.put<Transaction>(this.transactionsUrl+'/'+transaction._id, transaction, {headers: this.headers});\n  }\n\n  addTransaction (transaction: Transaction): Observable<Transaction> {\n    return this.http.post<Transaction>(this.transactionsUrl, transaction, {headers: this.headers});\n  }\n\n  removeTransaction (categoryId: String) {\n    return this.http.delete(this.transactionsUrl+'/'+categoryId, {headers: this.headers});\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"transactions !== undefined && transactions.length\\\"><div class=\\\"row m-2\\\">\\n  <select class=\\\"col-3 form-control\\\" (change)=\\\"onFilterChanged($event.target.value)\\\">\\n    <option value=\\\"all\\\" selected>Filter by category</option>\\n    <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category._id}}\\\">{{category.name}}</option>\\n  </select>\\n  </div>\\n  <table class=\\\"table table-bordered table-hover m-2\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">Category</th>\\n        <th scope=\\\"col\\\">Operation type</th>\\n        <th scope=\\\"col\\\">Total</th>\\n        <th scope=\\\"col\\\">Date</th>\\n        <th scope=\\\"col\\\">Description</th>\\n        <th scope=\\\"col\\\">Actions</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\" let transaction of transactions; let i = index \\\">\\n        <th scope=\\\"row\\\">{{i+1}}</th>\\n        <td>{{getCategoryName(transaction.category)}}</td>\\n        <td>{{transaction.type}}</td>\\n        <td>{{transaction.total}}</td>\\n        <td>{{transaction.date_created | date}}</td>\\n        <td>{{transaction.description}}</td>\\n        <td class=\\\"text-center\\\"><button routerLink=\\\"/transaction/view/{{transaction._id}}\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-primary mr-2\\\">Edit</button><button (click)=\\\"removeTransaction(transaction._id)\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<div *ngIf=\\\"!transactions.length\\\" class=\\\"m-2 alert alert-warning\\\">There aren't any transactions, be free to add some :)</div>\\n<button class=\\\"m-2 btn btn-primary\\\" routerLink=\\\"/transaction/add\\\">Add transaction</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Transaction } from '../transaction';\nimport { Category } from '../category';\n\nimport { TransactionsService } from '../transactions.service';\nimport { CategoriesService } from '../categories.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\nexport class TransactionsComponent implements OnInit {\n  transactions: Transaction[] = [];\n  categories: Category[] = [];\n\n  constructor(\n    private transactionsService: TransactionsService,\n    private categoriesService: CategoriesService,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.getCategories();\n  \tthis.getTransactions();\n  }\n\n  getTransactions (): void{\n  \tthis.transactionsService.getTransactions()\n  \t    .subscribe(transactions => this.transactions = transactions);\n  }\n\n  getCategories (): void{\n    this.categoriesService.getCategories()\n        .subscribe(categories => this.categories = categories);\n  }\n\n  getCategoryName (categoryId: string): string{\n    if(this.categories === undefined)return \"undefined\";\n    const category = this.categories.find(cat => cat._id === categoryId);\n    return (category === undefined?\"undefined\":category.name);\n  }\n\n  removeTransaction(transactionId: string): void{\n    this.transactionsService.removeTransaction(transactionId)\n        .subscribe( () => {\n          this.toastr.success(\"Transaction was removed succesfully\", \"Success\");\n          this.getTransactions();\n          });\n  }\n\n  onFilterChanged(categoryId: string): void{\n    if(categoryId === \"all\"){\n      this.transactionsService.getTransactions()\n        .subscribe(transactions => this.transactions = transactions);\n        return;\n    }\n    this.transactionsService.getTransactions({'category': categoryId})\n        .subscribe(transactions => this.transactions = transactions);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}